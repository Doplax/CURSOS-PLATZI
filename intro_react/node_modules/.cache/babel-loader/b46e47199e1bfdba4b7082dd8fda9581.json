{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useLocalStorage } from \"./useLocalStorage\";\n\nfunction useTodos() {\n  _s();\n\n  const {\n    item: todos,\n    saveItem: saveTodos,\n    loading,\n    error\n  } = useLocalStorage(\"TODOS_V1\", []); // Crea un estado para el valor de búsqueda\n\n  const [searchValue, setSearchValue] = React.useState(\"\"); // Filtra los todos completados y obtiene su cantidad\n\n  const completedTodos = todos.filter(todo => todo.completed === true).length; // Obtiene la cantidad total de todos\n\n  const totalTodos = todos.length;\n  let searchedTodos = []; // Guardaremos las coincidencias de búsqueda\n  // Lógica para filtrar los todos en función del valor de búsqueda\n\n  if (searchValue.length <= 1) {\n    searchedTodos = todos;\n  } else {\n    searchedTodos = todos.filter(todo => {\n      const todoText = todo.text.toLowerCase();\n      const searchText = searchValue.toLocaleLowerCase();\n      return todoText.includes(searchText);\n    });\n  } //Función para añadir un nuevo TODO\n\n\n  const addTodo = text => {\n    const newTodos = [...todos];\n    newTodos.push({\n      completed: false,\n      text\n    });\n    saveTodos(newTodos);\n  }; // Función para marcar un todo como completado\n\n\n  const completeTodo = text => {\n    const todoIndex = todos.findIndex(todo => todo.text === text);\n    const newTodos = [...todos];\n    newTodos[todoIndex].completed = true;\n    saveTodos(newTodos);\n  }; // Función para eliminar un todo\n\n\n  const deleteTodo = text => {\n    const todoIndex = todos.findIndex(todo => todo.text === text);\n    const newTodos = [...todos];\n    newTodos.splice(todoIndex, 1);\n    saveTodos(newTodos);\n  };\n\n  const [openModal, setOpenModal] = React.useState(false);\n  return {\n    loading,\n    error,\n    totalTodos,\n    completedTodos,\n    searchValue,\n    setSearchValue,\n    searchedTodos,\n    completeTodo,\n    addTodo,\n    deleteTodo,\n    openModal,\n    setOpenModal\n  };\n}\n\n_s(useTodos, \"kfmEjh1M7XUWgh+uQKiGEjvOGu8=\", false, function () {\n  return [useLocalStorage];\n});\n\nexport { useTodos };","map":{"version":3,"names":["React","useLocalStorage","useTodos","item","todos","saveItem","saveTodos","loading","error","searchValue","setSearchValue","useState","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","toLocaleLowerCase","includes","addTodo","newTodos","push","completeTodo","todoIndex","findIndex","deleteTodo","splice","openModal","setOpenModal"],"sources":["/home/super/CURSOS-PLATZI/intro_react/src/App/useTodos.jsx"],"sourcesContent":["import React from \"react\";\nimport { useLocalStorage } from \"./useLocalStorage\";\n\n\nfunction useTodos() {\n  const {\n    item: todos,\n    saveItem: saveTodos,\n    loading,\n    error,\n  } = useLocalStorage(\"TODOS_V1\", []);\n\n  // Crea un estado para el valor de búsqueda\n  const [searchValue, setSearchValue] = React.useState(\"\");\n\n  // Filtra los todos completados y obtiene su cantidad\n  const completedTodos = todos.filter((todo) => todo.completed === true).length;\n\n  // Obtiene la cantidad total de todos\n  const totalTodos = todos.length;\n\n  let searchedTodos = []; // Guardaremos las coincidencias de búsqueda\n\n  // Lógica para filtrar los todos en función del valor de búsqueda\n  if (searchValue.length <= 1) {\n    searchedTodos = todos;\n  } else {\n    searchedTodos = todos.filter((todo) => {\n      const todoText = todo.text.toLowerCase();\n      const searchText = searchValue.toLocaleLowerCase();\n      return todoText.includes(searchText);\n    });\n  }\n\n  //Función para añadir un nuevo TODO\n  const addTodo = (text) => {\n    const newTodos = [...todos];\n    newTodos.push({\n      completed: false,\n      text,\n    })\n    saveTodos(newTodos)\n  }\n\n  // Función para marcar un todo como completado\n  const completeTodo = (text) => {\n    const todoIndex = todos.findIndex((todo) => todo.text === text);\n    const newTodos = [...todos];\n    newTodos[todoIndex].completed = true;\n    saveTodos(newTodos);\n  };\n\n  // Función para eliminar un todo\n  const deleteTodo = (text) => {\n    const todoIndex = todos.findIndex((todo) => todo.text === text);\n    const newTodos = [...todos];\n    newTodos.splice(todoIndex, 1);\n    saveTodos(newTodos);\n  };\n\n  const [openModal, setOpenModal] = React.useState(false);\n\n  return (\n      {\n        loading,\n        error,\n        totalTodos,\n        completedTodos,\n        searchValue,\n        setSearchValue,\n        searchedTodos,\n        completeTodo,\n        addTodo,\n        deleteTodo,\n        openModal,\n        setOpenModal\n      });\n}\n\nexport { useTodos };\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,mBAAhC;;AAGA,SAASC,QAAT,GAAoB;EAAA;;EAClB,MAAM;IACJC,IAAI,EAAEC,KADF;IAEJC,QAAQ,EAAEC,SAFN;IAGJC,OAHI;IAIJC;EAJI,IAKFP,eAAe,CAAC,UAAD,EAAa,EAAb,CALnB,CADkB,CAQlB;;EACA,MAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCV,KAAK,CAACW,QAAN,CAAe,EAAf,CAAtC,CATkB,CAWlB;;EACA,MAAMC,cAAc,GAAGR,KAAK,CAACS,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,SAAL,KAAmB,IAA1C,EAAgDC,MAAvE,CAZkB,CAclB;;EACA,MAAMC,UAAU,GAAGb,KAAK,CAACY,MAAzB;EAEA,IAAIE,aAAa,GAAG,EAApB,CAjBkB,CAiBM;EAExB;;EACA,IAAIT,WAAW,CAACO,MAAZ,IAAsB,CAA1B,EAA6B;IAC3BE,aAAa,GAAGd,KAAhB;EACD,CAFD,MAEO;IACLc,aAAa,GAAGd,KAAK,CAACS,MAAN,CAAcC,IAAD,IAAU;MACrC,MAAMK,QAAQ,GAAGL,IAAI,CAACM,IAAL,CAAUC,WAAV,EAAjB;MACA,MAAMC,UAAU,GAAGb,WAAW,CAACc,iBAAZ,EAAnB;MACA,OAAOJ,QAAQ,CAACK,QAAT,CAAkBF,UAAlB,CAAP;IACD,CAJe,CAAhB;EAKD,CA5BiB,CA8BlB;;;EACA,MAAMG,OAAO,GAAIL,IAAD,IAAU;IACxB,MAAMM,QAAQ,GAAG,CAAC,GAAGtB,KAAJ,CAAjB;IACAsB,QAAQ,CAACC,IAAT,CAAc;MACZZ,SAAS,EAAE,KADC;MAEZK;IAFY,CAAd;IAIAd,SAAS,CAACoB,QAAD,CAAT;EACD,CAPD,CA/BkB,CAwClB;;;EACA,MAAME,YAAY,GAAIR,IAAD,IAAU;IAC7B,MAAMS,SAAS,GAAGzB,KAAK,CAAC0B,SAAN,CAAiBhB,IAAD,IAAUA,IAAI,CAACM,IAAL,KAAcA,IAAxC,CAAlB;IACA,MAAMM,QAAQ,GAAG,CAAC,GAAGtB,KAAJ,CAAjB;IACAsB,QAAQ,CAACG,SAAD,CAAR,CAAoBd,SAApB,GAAgC,IAAhC;IACAT,SAAS,CAACoB,QAAD,CAAT;EACD,CALD,CAzCkB,CAgDlB;;;EACA,MAAMK,UAAU,GAAIX,IAAD,IAAU;IAC3B,MAAMS,SAAS,GAAGzB,KAAK,CAAC0B,SAAN,CAAiBhB,IAAD,IAAUA,IAAI,CAACM,IAAL,KAAcA,IAAxC,CAAlB;IACA,MAAMM,QAAQ,GAAG,CAAC,GAAGtB,KAAJ,CAAjB;IACAsB,QAAQ,CAACM,MAAT,CAAgBH,SAAhB,EAA2B,CAA3B;IACAvB,SAAS,CAACoB,QAAD,CAAT;EACD,CALD;;EAOA,MAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BlC,KAAK,CAACW,QAAN,CAAe,KAAf,CAAlC;EAEA,OACI;IACEJ,OADF;IAEEC,KAFF;IAGES,UAHF;IAIEL,cAJF;IAKEH,WALF;IAMEC,cANF;IAOEQ,aAPF;IAQEU,YARF;IASEH,OATF;IAUEM,UAVF;IAWEE,SAXF;IAYEC;EAZF,CADJ;AAeD;;GAzEQhC,Q;UAMHD,e;;;AAqEN,SAASC,QAAT"},"metadata":{},"sourceType":"module"}